{"version":3,"sources":["api/index.js","components/SearchBar.js","components/Card.js","components/SearchResults.js","components/DeckList.js","index.js"],"names":["fetchCards","a","name","text","URL","axios","get","data","cards","SearchBar","setResults","useState","setName","setText","event","preventDefault","id","onSubmit","type","placeholder","value","onChange","target","Card","manaCost","flavor","imageUrl","addCardToDeck","removeCardFromDeck","className","src","onClick","SearchResults","results","length","map","result","DeckList","deck","cardCount","reduce","card","count","App","setDeck","console","log","nextDeck","index","findIndex","push","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e45e97f7.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport async function fetchCards({ name, text } ={}) {\n    let URL = `https://api.magicthegathering.io/v1/cards?`\n  try {\n      if(name){\n          URL += `name=${ name }&`;\n      }\n      if(text){\n          URL += `text=${ text }`;\n      }\n    const { data } = await axios.get(URL);\n\n    return data.cards || [];\n  } catch (error) {\n    throw error;\n  }\n}","\nimport React, { useState } from 'react';\n\nimport {\n  fetchCards,\n} from '../api';\n\nconst SearchBar = ({ setResults }) => {\n  const [name, setName] = useState('');\n  const [text, setText] = useState('');\n\n  const handleNameChange = event => {\n    setName( event.target.value );\n  }\n\n  const handleTextChange = event => {\n    setText( event.target.value );\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    const cards = await fetchCards({\n      name,\n      text\n    });\n\n    setResults(cards);\n  }\n\n  return (\n    <div id=\"search\">\n      <h3>Look up cards here...</h3>\n      <form onSubmit={ handleSubmit }>\n        <input\n          type=\"text\" \n          placeholder=\"card name\"\n          value={ name }\n          onChange={ handleNameChange } />\n        <input\n          type=\"text\"\n          placeholder=\"card text\"\n          value={ text }\n          onChange={ handleTextChange } />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n}\n\nexport default SearchBar;","import React from 'react';\nimport './Card.css';\n\nconst Card = ({\n    id,\n    name,\n    type,\n    manaCost,\n    text,\n    flavor,\n    imageUrl,\n    addCardToDeck,\n    removeCardFromDeck\n}) => {\n    return (\n        <div className=\"Card\">\n            <div className=\"info\">\n                <p className=\"header\">\n                    {name} - {manaCost}\n                </p>\n                <p className=\"type\">\n                    {type}\n                </p>\n                <p className=\"text\">\n                    {text}\n                </p>\n                <p className=\"flavor\">\n                    {flavor}\n                </p>\n            </div>\n            <img className=\"preview\" src={imageUrl} />\n            <div className=\"actions\">\n                <button\n                    onClick={() => {\n                        addCardToDeck({\n                            id,\n                            name\n                        })\n                    }}>\n                    (+) Add to Deck\n            </button>\n                <button\n                    onClick={() => {\n                        removeCardFromDeck({\n                            id\n                        })\n                    }}>\n                    (-) Remove from Deck\n          </button>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport './SearchResults.css';\nimport Card from './Card';\n\nconst SearchResults = ({ results, addCardToDeck, removeCardFromDeck }) => {\n    return (\n        <div id=\"results\">\n            <h3>Here's what we found ({results.length} results):</h3>\n            <div className=\"CardList\">\n                {\n                    results.map(result => (\n                        <Card\n                            key={result.id}\n                            addCardToDeck={addCardToDeck}\n                            removeCardFromDeck={removeCardFromDeck}\n                            {...result} />\n                    ))\n                }\n            </div>\n        </div>\n    );\n}\n\n\nexport default SearchResults;","import React from 'react';\n\nconst DeckList = ({ deck, addCardToDeck, removeCardFromDeck }) => {\n    let cardCount = deck.reduce((cardCount, card) => {\n        return cardCount + card.count\n    }, 0);\n\n    return (\n        <div id=\"deck\">\n            <h3>Your deck so far ({cardCount} cards):</h3>\n            <div className=\"DeckList\">\n                {deck.map(({ id, name, count }) => (\n                    <p key={id}>\n                        <span>\n                            ({count}x) {name}\n                        </span><br />\n                        <button onClick={\n                            () => addCardToDeck({ id, name })\n                        }> + </button>\n                        <button onClick={\n                            () => removeCardFromDeck({ id })\n                        }> - </button>\n                    </p>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default DeckList;","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport './index.css';\n\nimport {\n    DeckList,\n    SearchBar,\n    SearchResults\n} from './components';\n\nimport {\n    fetchCards,\n} from './api';\n\nconst App = () => {\n    // fetchCards().then(console.log);\n    const [results, setResults] = useState([]);\n    const [deck, setDeck] = useState([]);\n    console.log(\"new results\", results)\n\n    const addCardToDeck = ({ id, name }) => {\n        const nextDeck = [...deck]; // make a duplicate first\n        const index = nextDeck.findIndex(card => card.id === id);\n\n        // index will be -1 if it is not found\n        if (index > -1) {\n            nextDeck[index].count += 1;\n        } else {\n            nextDeck.push({\n                id,\n                name,\n                count: 1\n            });\n        }\n\n        setDeck(nextDeck);\n    }\n\n    const removeCardFromDeck = ({ id }) => {\n        const nextDeck = [...deck];\n        const index = nextDeck.findIndex(card => card.id === id);\n\n        if (index === -1) {\n            // don't do anything if we're trying to remove a card not in the deck\n            return;\n        }\n\n        if (nextDeck[index].count === 1) {\n            // remove the card altogether\n            nextDeck.splice(index, 1);\n        } else {\n            // decrement the count\n            nextDeck[index].count -= 1;\n        }\n\n        setDeck(nextDeck);\n    }\n\n    return (\n        <div id=\"app\">\n            <SearchBar setResults={setResults} />\n            <SearchResults\n                results={results}\n                addCardToDeck={addCardToDeck}\n                removeCardFromDeck={removeCardFromDeck} />\n            <DeckList deck={deck} />\n        </div>\n    );\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}